A51 MACRO ASSEMBLER  PROJETOASM                                                           05/21/2024 21:22:31 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\ProjetoASM.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE ProjetoASM.a51 SET(SMALL) DEBUG PRINT(.\Listings\ProjetoASM.lst) OBJECT
                      (.\Objects\ProjetoASM.obj) EP

LOC  OBJ            LINE     SOURCE

  0090                 1     D1 EQU P1
  00A0                 2     D2 EQU P2
                       3     
  00FF                 4     TempoInicial EQU 255
  0014                 5     TempoConta EQU 20
  00C8                 6     segundo EQU 200
                       7     
  0006                 8     TempoH0 EQU 0x06
  0006                 9     TempoL0 EQU 0x06
                      10     
                      11     ; Definições de bits
  00B2                12     B1 EQU P3.2
  00B3                13     Pressionado EQU P3.3
  00B4                14     BA EQU P3.4
  00B5                15     BB EQU P3.5
  00B6                16     BC EQU P3.6
  00B7                17     BD EQU P3.7
                      18             
----                  19     CSEG AT 0300H
                      20     ; Tabela de segmentos para mostrar no display (-., 0., 1., 2., 3., 4., 5., -, 0, 1, 2, 3, 4
                             , 5, 6, 7, 8, 9, A, B, C, D)
0300                  21     Segmentos:            
0300 3F407924         22         DB  0x3F, 0x40, 0x79, 0x24, 0x30, 0x19, 0x12, 0xBF, 0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92,
                              0x82, 0xF8, 0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1
0304 301912BF                
0308 C0F9A4B0                
030C 999282F8                
0310 80908883                
0314 C6A1                    
                      23     
----                  24     CSEG AT 0000H
0000 804E             25         JMP main
                      26     
                      27     ; interrupcao externa 0
----                  28     CSEG AT 0003H
0003 0187             29             JMP External0_Handler
                      30     
                      31     ; interrupcao timer 0 (5ms)
----                  32     CSEG AT 000BH
000B 019A             33             JMP Timer0_Handler
                      34     
                      35     ; interrupcao externa 1
----                  36     CSEG AT 0013H
0013 01AB             37             JMP External1_Handler
                      38     
----                  39     CSEG AT 0050H
                      40             
                      41     ; Main program
                      42     ; Initialize system and enter infinite loop     
                      43     
0050                  44     main:
0050 1167             45         CALL Init                       ; Initialize the system
0052                  46     main_loop:
0052 11E6             47         CALL displaySegundos            ; Display the current seconds
                      48             
0054 BA0004           49         CJNE R2, #0, CheckResposta
                      50             
A51 MACRO ASSEMBLER  PROJETOASM                                                           05/21/2024 21:22:31 PAGE     2

0057 11F5             51         CALL semResposta                ; Call semResposta if segundosIniciais <= 0
0059 80F7             52         JMP main_loop                   ; Continue the loop
005B                  53     CheckResposta:
005B EB               54         MOV A, R3                        ; Check if respondeu == 1
005C 60F4             55         JZ main_loop                     ; If respondeu == 0, continue the loop
                      56             
                      57             ; Check if segundosIniciais < TempoInicial
005E BAFF02           58         CJNE R2, #TempoInicial, CheckMostraInformacao
                      59             
0061 80EF             60         JMP main_loop                   ; Continue the loop
0063                  61     CheckMostraInformacao:
0063 3114             62         CALL mostraInformacao           ; Call mostraInformacao if respondeu and segundosInicia
                             is < TempoInicial
0065 80EB             63             JMP main_loop                   ; Continue the loop
                      64             
                      65             
0067                  66     Init:
                      67             ; Inicialização do sistema
0067 7800             68         MOV R0, #0                     ; Inicializa registrador clicouB1 com 0
0069 7900             69         MOV R1, #0                     ; Inicializa registrador conta com 0
006B 7AFF             70         MOV R2, #TempoInicial          ; Inicializa segundosIniciais com TempoInicial
006D 7B00             71         MOV R3, #0                     ; Inicializa registrador respondeu com 0
006F 7C00             72         MOV R4, #0                     ; Inicializa registrador resposta com 0
                      73     
                      74             ; Configurações iniciais e habilitação das interrupções
0071 75A887           75         MOV IE, #87H                                        ;EA=1, ET1=0, EX1=1, ET0=1 e EX0=1 
                             -> IE=10000111
0074 75B800           76             MOV IP, #00H                                    ;IP = 0
                      77             
                      78             ;Configuracao Registo TMOD
0077 758902           79             MOV TMOD, #00000010b ;definir o timer 0 no modo 2 (8 bit - auto reload) 
                      80             
007A 758A06           81         MOV TL0, #TempoL0              ; Inicializa TL0
007D 758C06           82         MOV TH0, #TempoH0              ; Inicializa TH0
                      83             
0080 C28C             84         CLR TR0
0082 D288             85             SETB IT0
0084 D28A             86             SETB IT1
0086 22               87             RET
                      88                     
                      89                     
0087                  90     External0_Handler:
                      91         ; Verifica se clicouB1 (R0) está setado
0087 B80002           92         CJNE R0, #0, External0_Clicked
008A 8009             93             JMP External0_NotClicked
008C                  94     External0_Clicked:
008C C28C             95         CLR TR0                        ; Timer0 para de contar o tempo
008E 7AFF             96         MOV R2, #TempoInicial          ; Reinicia segundosIniciais (R2)
0090 7900             97         MOV R1, #0                     ; Reinicia conta (R1)
0092 7800             98         MOV R0, #0
0094 32               99         RETI
0095                 100     External0_NotClicked:
                     101         ; Se clicouB1 (R0) não está setado
0095 D28C            102         SETB TR0                       ; Timer0 começa a contar o tempo
0097 7801            103         MOV R0, #1                     ; Seta clicouB1 (R0)
0099 32              104         RETI
                     105     
                     106     
009A                 107     Timer0_Handler:
009A 0F              108         INC R7                               ; Increment the counter for 20 interruptions
009B BF140C          109         CJNE R7, #20, Timer0_End             ; If R0 is not equal to 20, jump to Timer0_End
                     110     
009E 09              111         INC R1                               ; Increment R1 every 20 interruptions
009F 7F00            112         MOV R7, #0                           ; Reset the counter
                     113     
00A1 BB0006          114         CJNE R3, #0, Timer0_End              ; If respondeu is not zero, jump to Timer0_End
A51 MACRO ASSEMBLER  PROJETOASM                                                           05/21/2024 21:22:31 PAGE     3

00A4 B91403          115         CJNE R1, #TempoConta, Timer0_End     ; If conta (R1) is not equal to TempoConta, jump t
                             o Timer0_End
                     116     
00A7 1A              117         DEC R2                               ; Decrement segundosIniciais (R2)
00A8 7900            118         MOV R1, #0                           ; Reset conta (R1)
00AA                 119     Timer0_End:
00AA 32              120         RETI
                     121             
                     122             
00AB                 123     External1_Handler:
                     124         ;JNB Pressionado, External1_End        ; Pula para External1_End se Pressionado for 0 (
                             não pressionado)
00AB BAFF05          125         CJNE R2, #TempoInicial, SecondsNotZero ; Pula para External1_End se segundosIniciais fo
                             r diferente de TempoInicial
00AE BA0002          126         CJNE R2, #0, SecondsNotZero
00B1 8026            127             JMP External1_End
00B3                 128     SecondsNotZero:
                     129             ; Se chegou aqui, verifica as opções de resposta
00B3 30B40B          130             JNB BA, AnswerA                  ; Se BA for pressionado (0), define resposta como 1
00B6 30B50E          131             JNB BB, AnswerB                  ; Se BB for pressionado (0), define resposta como 2
00B9 30B611          132             JNB BC, AnswerC                  ; Se BC for pressionado (0), define resposta como 3
00BC 30B714          133             JNB BD, AnswerD                  ; Se BD for pressionado (0), define resposta como 4
00BF 80EA            134             JMP External1_Handler                    ; Se nenhum botão foi pressionado, volta p
                             ara o início do loop
00C1                 135     AnswerA:
00C1 7B01            136         MOV R3, #1                       ; Define respondeu (R3) como 1
00C3 7C01            137         MOV R4, #1                       ; Define resposta (R4) como 1
00C5 8012            138         JMP External1_End                ; Salta para External1_End
00C7                 139     AnswerB:
00C7 7B01            140         MOV R3, #1                       ; Define respondeu (R3) como 1
00C9 7C02            141         MOV R4, #2                       ; Define resposta (R4) como 2
00CB 800C            142         JMP External1_End                ; Salta para External1_End
00CD                 143     AnswerC:
00CD 7B01            144         MOV R3, #1                       ; Define respondeu (R3) como 1
00CF 7C03            145         MOV R4, #3                       ; Define resposta (R4) como 3
00D1 8006            146         JMP External1_End                ; Salta para External1_End
00D3                 147     AnswerD:
00D3 7B01            148         MOV R3, #1                       ; Define respondeu (R3) como 1
00D5 7C04            149         MOV R4, #4                       ; Define resposta (R4) como 4
00D7 8000            150         JMP External1_End                ; Salta para External1_End
00D9                 151     External1_End:
00D9 32              152         RETI                             ; Retorna da interrupção externa 1
                     153             
                     154             
                     155     ; Function to display numbers on two 7-segment displays
                     156     ; Arguments: num1 in R5, num2 in R6
                     157     ; Assumes segmentos array starts at label `Segmentos`
00DA                 158     display:
00DA 900300          159         MOV DPTR, #Segmentos            ; Load address of Segmentos array
                     160     
00DD ED              161         MOV A, R5                       ; Get num1
00DE 93              162         MOVC A, @A+DPTR                 ; Load Segmentos[num1]
00DF F590            163         MOV P1, A                       ; Set D1
                     164     
00E1 EE              165         MOV A, R6                       ; Get num2
00E2 93              166         MOVC A, @A+DPTR
00E3 F5A0            167         MOV P2, A                       ; Set D2
                     168     
00E5 22              169         RET
                     170             
                     171             
                     172     ; Function to display seconds on two 7-segment displays
                     173     ; Argument: num in R2 (seconds)
00E6                 174     displaySegundos:
00E6 EA              175         MOV A, R2
00E7 75F00A          176         MOV B, #10
A51 MACRO ASSEMBLER  PROJETOASM                                                           05/21/2024 21:22:31 PAGE     4

00EA 84              177         DIV AB
                     178     
00EB 04              179         INC A                           ; dezenas + 1
00EC FD              180         MOV R5, A                       ; Pass num1 to display
                     181     
00ED E5F0            182             MOV A, B
00EF 2408            183         ADD A, #8                       ; unidades + 8
00F1 FE              184         MOV R6, A                       ; Pass num2 to display
                     185     
00F2 11DA            186         CALL display
00F4 22              187         RET
                     188     
                     189     
                     190     ; Function to indicate no response
                     191     ; No arguments
00F5                 192     semResposta:
00F5 7900            193         MOV R1, #0
00F7 7B01            194         MOV R3, #1
                     195     
00F9 7D01            196         MOV R5, #1                      ; Display (1, 8)
00FB 7E08            197         MOV R6, #8
00FD 11DA            198         CALL display
                     199     
00FF D28C            200         SETB TR0                        ; Start Timer0
0101                 201     semResposta_Loop:
0101 B9C808          202         CJNE R1, #segundo, NoTimeout     ; Check if conta == segundo
0104 7D00            203         MOV R5, #0                      ; Display (0, 7)
0106 7E07            204         MOV R6, #7
0108 11DA            205         CALL display
010A C28C            206         CLR TR0
010C                 207     NoTimeout:
010C 20B2F2          208         JB B1, semResposta_Loop             ; Loop while B1 (P3.2) is high (not pressed)
                     209     
010F 7900            210         MOV R1, #0
0111 7B00            211         MOV R3, #0
0113 22              212         RET
                     213     
                     214     
                     215     ; Function to show information on the display
                     216     ; No arguments
0114                 217     mostraInformacao:
                     218             
0114 C28C            219             CLR TR0
0116 75F000          220         MOV B, #0                        ; Reset opcao (R7) to 0
0119 7900            221         MOV R1, #0                        ; Reset conta (R1)
011B D28C            222         SETB TR0                          ; Start Timer0
                     223     
011D                 224     mostraInformacao_Loop:
011D 30B220          225         JNB B1, mostraInformacao_Fim       ; Exit loop if B1 (P3.2) is pressed
                     226     
0120 B9C8FA          227         CJNE R1, #segundo, mostraInformacao_Loop ; Check if conta == segundo
                     228             
0123 E5F0            229             MOV A, B
0125 B40009          230         CJNE A, #0, DisplayOption         ; If opcao is not 0, display option
0128                 231     DisplaySeconds:
0128 11E6            232         CALL displaySegundos              ; Display seconds
012A 75F001          233         MOV B, #1                        ; Set opcao to 1
012D 7900            234         MOV R1, #0                        ; Reset conta (R1)
012F 80EC            235         JMP mostraInformacao_Loop
                     236     
0131                 237     DisplayOption:
0131 7D00            238         MOV R5, #0
0133 EC              239         MOV A, R4
0134 2411            240         ADD A, #17
0136 FE              241         MOV R6, A
0137 11DA            242         CALL display                      ; Display the chosen option
A51 MACRO ASSEMBLER  PROJETOASM                                                           05/21/2024 21:22:31 PAGE     5

0139 75F000          243         MOV B, #0                        ; Set opcao to 0
013C 7900            244         MOV R1, #0                        ; Reset conta (R1)
013E 80DD            245         JMP mostraInformacao_Loop
                     246     
0140                 247     mostraInformacao_Fim:
0140 C28C            248         CLR TR0                           ; Stop Timer0
0142 7900            249         MOV R1, #0                        ; Reset conta (R1)
0144 7B00            250         MOV R3, #0                        ; Reset respondeu (R3)
                     251     
0146 22              252         RET
                     253     
                     254     
                     255     END
A51 MACRO ASSEMBLER  PROJETOASM                                                           05/21/2024 21:22:31 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E                T Y P E  V A L U E   ATTRIBUTES

ANSWERA . . . . . . .  C ADDR   00C1H   A   
ANSWERB . . . . . . .  C ADDR   00C7H   A   
ANSWERC . . . . . . .  C ADDR   00CDH   A   
ANSWERD . . . . . . .  C ADDR   00D3H   A   
B . . . . . . . . . .  D ADDR   00F0H   A   
B1. . . . . . . . . .  B ADDR   00B0H.2 A   
BA. . . . . . . . . .  B ADDR   00B0H.4 A   
BB. . . . . . . . . .  B ADDR   00B0H.5 A   
BC. . . . . . . . . .  B ADDR   00B0H.6 A   
BD. . . . . . . . . .  B ADDR   00B0H.7 A   
CHECKMOSTRAINFORMACAO  C ADDR   0063H   A   
CHECKRESPOSTA . . . .  C ADDR   005BH   A   
D1. . . . . . . . . .  D ADDR   0090H   A   
D2. . . . . . . . . .  D ADDR   00A0H   A   
DISPLAY . . . . . . .  C ADDR   00DAH   A   
DISPLAYOPTION . . . .  C ADDR   0131H   A   
DISPLAYSECONDS. . . .  C ADDR   0128H   A   
DISPLAYSEGUNDOS . . .  C ADDR   00E6H   A   
EXTERNAL0_CLICKED . .  C ADDR   008CH   A   
EXTERNAL0_HANDLER . .  C ADDR   0087H   A   
EXTERNAL0_NOTCLICKED.  C ADDR   0095H   A   
EXTERNAL1_END . . . .  C ADDR   00D9H   A   
EXTERNAL1_HANDLER . .  C ADDR   00ABH   A   
IE. . . . . . . . . .  D ADDR   00A8H   A   
INIT. . . . . . . . .  C ADDR   0067H   A   
IP. . . . . . . . . .  D ADDR   00B8H   A   
IT0 . . . . . . . . .  B ADDR   0088H.0 A   
IT1 . . . . . . . . .  B ADDR   0088H.2 A   
MAIN. . . . . . . . .  C ADDR   0050H   A   
MAIN_LOOP . . . . . .  C ADDR   0052H   A   
MOSTRAINFORMACAO. . .  C ADDR   0114H   A   
MOSTRAINFORMACAO_FIM.  C ADDR   0140H   A   
MOSTRAINFORMACAO_LOOP  C ADDR   011DH   A   
NOTIMEOUT . . . . . .  C ADDR   010CH   A   
P1. . . . . . . . . .  D ADDR   0090H   A   
P2. . . . . . . . . .  D ADDR   00A0H   A   
P3. . . . . . . . . .  D ADDR   00B0H   A   
PRESSIONADO . . . . .  B ADDR   00B0H.3 A   
SECONDSNOTZERO. . . .  C ADDR   00B3H   A   
SEGMENTOS . . . . . .  C ADDR   0300H   A   
SEGUNDO . . . . . . .  N NUMB   00C8H   A   
SEMRESPOSTA . . . . .  C ADDR   00F5H   A   
SEMRESPOSTA_LOOP. . .  C ADDR   0101H   A   
TEMPOCONTA. . . . . .  N NUMB   0014H   A   
TEMPOH0 . . . . . . .  N NUMB   0006H   A   
TEMPOINICIAL. . . . .  N NUMB   00FFH   A   
TEMPOL0 . . . . . . .  N NUMB   0006H   A   
TH0 . . . . . . . . .  D ADDR   008CH   A   
TIMER0_END. . . . . .  C ADDR   00AAH   A   
TIMER0_HANDLER. . . .  C ADDR   009AH   A   
TL0 . . . . . . . . .  D ADDR   008AH   A   
TMOD. . . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . . .  B ADDR   0088H.4 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
