C51 COMPILER V9.60.7.0   PROJETOC                                                          05/23/2024 13:41:20 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PROJETOC
OBJECT MODULE PLACED IN .\Objects\ProjetoC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ProjetoC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -ProjetoC.lst) TABS(2) OBJECT(.\Objects\ProjetoC.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          // Tempo inicial de 5.0 segundos
   4          #define TempoInicial 50
   5          // Valor da variavel 'conta' para 1 segundo
   6          #define segundo 4000
   7          
   8          /* 
   9          O valor maximo da contagem de tempo e "FF + 1" = 256 microsegundos (Timer no modo 2 tem 8 bits)
  10          Um cilo maquina tem 6 estados e cada estado tem 2 periodos do oscilador, logo 12 periodos
  11          Periodo = 1/12*(10^6) = 1/12 microsegundos , 1 ciclo maquina = 12*Periodo = 12*(1/12) = 1 microsegundo
  12          250 microsegundos : 256-250 = 6 = 6 microsegundos (Sendo 06 -> TH0 e 06 -> TL0)
  13          */
  14          #define TempoH 0x06
  15          #define TempoL 0x06
  16          
  17          /*
  18          Da inicio a contagem decrescente para o participante responder (Caso o tempo para a contagem esteja a ser 
             -mostrado nos displays com o tempo inicial de 5.0 segundos)
  19          Repoe a visualizacao do tempo inicial de 5.0 segundos nos displays (Caso a informacao com o tempo/resposta
             - do participante esteja a ser mostrada nos displays)
  20          */
  21          sbit B1 = P3^2;
  22          
  23          /*
  24          Ao ser pressionado qualquer um dos botoes de opcao de resposta ha uma transicao logica de 1 para 0
  25          Enquanto qualquer um dos botoes de opcao de resposta continuar pressionado, e colocado o valor logico 0
  26          */
  27          sbit Pressionado = P3^3;
  28          
  29          // Opcoes de resposta
  30          sbit BA = P3^4;
  31          sbit BB = P3^5;
  32          sbit BC = P3^6;
  33          sbit BD = P3^7;
  34          
  35          // Display D1
  36          sbit D1A = P1^0;
  37          sbit D1B = P1^1;
  38          sbit D1C = P1^2;
  39          sbit D1D = P1^3;
  40          sbit D1E = P1^4;
  41          sbit D1F = P1^5;
  42          sbit D1G = P1^6;
  43          sbit D1DF = P1^7;
  44          
  45          // Display D2
  46          sbit D2A = P2^0;
  47          sbit D2B = P2^1;
  48          sbit D2C = P2^2;
  49          sbit D2D = P2^3;
  50          sbit D2E = P2^4;
  51          sbit D2F = P2^5;
  52          sbit D2G = P2^6;
C51 COMPILER V9.60.7.0   PROJETOC                                                          05/23/2024 13:41:20 PAGE 2   

  53          sbit D2DF = P2^7;
  54          
  55          //conta = 1 -> 250 microsegundos
  56          //conta = 400 -> 0.1 segundo
  57          unsigned int conta = 0;
  58          // Tempo inicial de 5.0 segundos
  59          int segundosIniciais = TempoInicial;
  60          // Resposta do participante (1->A, 2->B, 3->C ou 4->D)
  61          int resposta = 0;
  62          
  63          bit clicouB1 = 0;
  64          // Esta a '0' se esta a ser mostrado o tempo inicial nos displays (Nao foi clicado no botao B1)
  65          // Esta a '1' se informa��o com o tempo/resposta do participante esteja a ser mostrada nos displays (J
             -a foi clicado no botao B1)
  66          bit opcaoB1 = 0;
  67          // Esta a '0' se o participante ainda nao respondeu (Não clicou numa das opcoes de resposta durante os 5.
             -0 segundos)
  68          // Esta a '1' se o participante ja respondeu (Clicou numa das opcoes de resposta durante os 5.0 segundos)
  69          bit respondeu = 0;
  70          
  71          // Segmentos dos displays com todos os numeros, simbolos e letras
  72          code unsigned segments[22][8] = {
  73            {1, 1, 1, 1, 1, 1, 0, 0}, // -.
  74            {0, 0, 0, 0, 0, 0, 1, 0}, // 0.
  75            {1, 0, 0, 1, 1, 1, 1, 0}, // 1.
  76            {0, 0, 1, 0, 0, 1, 0, 0}, // 2.
  77            {0, 0, 0, 0, 1, 1, 0, 0}, // 3.
  78            {1, 0, 0, 1, 1, 0, 0, 0}, // 4.
  79            {0, 1, 0, 0, 1, 0, 0, 0}, // 5.
  80            {1, 1, 1, 1, 1, 1, 0, 1}, // -
  81            {0, 0, 0, 0, 0, 0, 1, 1}, // 0
  82            {1, 0, 0, 1, 1, 1, 1, 1}, // 1
  83            {0, 0, 1, 0, 0, 1, 0, 1}, // 2
  84            {0, 0, 0, 0, 1, 1, 0, 1}, // 3
  85            {1, 0, 0, 1, 1, 0, 0, 1}, // 4
  86            {0, 1, 0, 0, 1, 0, 0, 1}, // 5
  87            {0, 1, 0, 0, 0, 0, 0, 1}, // 6
  88            {0, 0, 0, 1, 1, 1, 1, 1}, // 7
  89            {0, 0, 0, 0, 0, 0, 0, 1}, // 8
  90            {0, 0, 0, 0, 1, 0, 0, 1}, // 9
  91            {0, 0, 0, 1, 0, 0, 0, 1}, // A
  92            {1, 1, 0, 0, 0, 0, 0, 1}, // B
  93            {0, 1, 1, 0, 0, 0, 1, 1}, // C
  94            {1, 0, 0, 0, 0, 1, 0, 1}, // D
  95          };
  96          
  97          // Inicializacao do sistema
  98          void Init (void)
  99          {
 100   1        // Configuracao do registo
 101   1        EA = 1; // Ativa as interrupcoes globais
 102   1        ET0 = 1; // Ativa a interrupcao timer 0
 103   1        EX0 = 1; // Ativa a interrupcao externa 0
 104   1        EX1 = 0;
 105   1        
 106   1        // Timer no modo 2, de 8 bits com auto-reload
 107   1        TMOD &= 0xF0; // Limpa os bits menos significativos
 108   1        TMOD |= 0x02; // Timer 0 no modo 2
 109   1        
 110   1        TH0 = TempoH;
 111   1        TL0 = TempoL;
 112   1        
C51 COMPILER V9.60.7.0   PROJETOC                                                          05/23/2024 13:41:20 PAGE 3   

 113   1        IT0 = 1; // Interrupcao externa 0 activa a falling edge
 114   1        IT1 = 1; // Interrupcao externa 1 activa a falling edge
 115   1        TR0 = 0; // Timer 0 nao comeca
 116   1      }
 117          
 118          // Interrupcao externa 0
 119          void External0 (void) interrupt 0 
 120          {
 121   1        clicouB1 = ~clicouB1;
 122   1        // Se o botao B1 foi clicado
 123   1        if(opcaoB1){
 124   2          IE0 = 0;
 125   2          EX1 = 0;
 126   2          TR0 = 0; // Timer0 para de contar o tempo
 127   2          segundosIniciais = TempoInicial;
 128   2          conta = 0;
 129   2        } 
 130   1        else {
 131   2          EX0 = 0;
 132   2          IE1 = 0;
 133   2          EX1 = 1;
 134   2          TR0 = 1; // Timer0 comeca a contar tempo
 135   2        }
 136   1      }
 137          
 138          // Interrupcao externa 1
 139          void External1 (void) interrupt 2
 140          {
 141   1        EX1 = 0;
 142   1        while(!Pressionado && segundosIniciais != TempoInicial && segundosIniciais != 0){
 143   2          if (!BA){
 144   3            respondeu = 1;
 145   3            resposta = 1;
 146   3          } else if (!BB){
 147   3            respondeu = 1;
 148   3            resposta = 2;
 149   3          } else if (!BC){
 150   3            respondeu = 1;
 151   3            resposta = 3;
 152   3          } else if (!BD){
 153   3            respondeu = 1;
 154   3            resposta = 4;
 155   3          }
 156   2        }
 157   1      }
 158          
 159          void Timer0_ISR (void) interrupt 1 
 160          {
 161   1        conta++;
 162   1      
 163   1        if (!respondeu){
 164   2          if (conta == 400){
 165   3            segundosIniciais--;
 166   3            conta=0;
 167   3          }
 168   2        }
 169   1      }
 170          
 171          void display (int num1, int num2)
 172          {
 173   1        D1A = segments[num1][0];
 174   1        D1B = segments[num1][1];
C51 COMPILER V9.60.7.0   PROJETOC                                                          05/23/2024 13:41:20 PAGE 4   

 175   1        D1C = segments[num1][2];
 176   1        D1D = segments[num1][3];
 177   1        D1E = segments[num1][4];
 178   1        D1F = segments[num1][5];
 179   1        D1G = segments[num1][6];
 180   1        D1DF = segments[num1][7];
 181   1      
 182   1        D2A = segments[num2][0];
 183   1        D2B = segments[num2][1];
 184   1        D2C = segments[num2][2];
 185   1        D2D = segments[num2][3];
 186   1        D2E = segments[num2][4];
 187   1        D2F = segments[num2][5];
 188   1        D2G = segments[num2][6];
 189   1        D2DF = segments[num2][7];
 190   1      }
 191          
 192          void displaySegundos (int num)
 193          {
 194   1          int dezenas = num / 10;
 195   1          int unidades = num % 10;
 196   1      
 197   1          display(dezenas+1, unidades+8);
 198   1      }
 199          
 200          void semResposta (void)
 201          {
 202   1        bit opcao = 0;
 203   1        conta = 0;
 204   1        respondeu = 1;
 205   1        
 206   1        clicouB1 = 1;
 207   1        IE0 = 0;
 208   1        EX0 = 1;
 209   1        EX1 = 0;
 210   1        
 211   1        TR0 = 1;
 212   1        
 213   1        display(1,8);
 214   1        
 215   1        while(clicouB1){
 216   2          if (conta == segundo){
 217   3            if (opcao == 0){
 218   4              display(0, 7);
 219   4              opcao = 1;
 220   4            } else {
 221   4              display(1, 8);
 222   4              opcao = 0;
 223   4            }
 224   3            conta = 0;
 225   3          }
 226   2          opcaoB1 = 1;
 227   2        }
 228   1        
 229   1        TR0 = 0;
 230   1        conta = 0;
 231   1        respondeu = 0;
 232   1      }
 233          
 234          void mostraInformacao(void)
 235          {
 236   1        bit opcao = 0;
C51 COMPILER V9.60.7.0   PROJETOC                                                          05/23/2024 13:41:20 PAGE 5   

 237   1        conta = 0;
 238   1        //respondeu = 1;
 239   1        
 240   1        clicouB1 = 1;
 241   1        IE0 = 0;
 242   1        EX0 = 1;
 243   1        EX1 = 0;
 244   1        
 245   1        TR0 = 1;
 246   1        
 247   1        while (clicouB1){
 248   2          if (conta == segundo){
 249   3            if (opcao == 0){
 250   4              displaySegundos(segundosIniciais);
 251   4              opcao = 1;
 252   4            } else {
 253   4              display(0, resposta+17);
 254   4              opcao = 0;
 255   4            }
 256   3            conta = 0;
 257   3          }
 258   2          opcaoB1 = 1;
 259   2        }
 260   1        
 261   1        TR0 = 0;
 262   1        conta = 0;
 263   1        respondeu = 0;
 264   1      }
 265          
 266          void main (void)
 267          {
 268   1        Init();
 269   1        
 270   1        while(1){
 271   2          
 272   2          displaySegundos(segundosIniciais);
 273   2          
 274   2          if (segundosIniciais <= 0){
 275   3            semResposta();
 276   3          }
 277   2      
 278   2          if (respondeu && segundosIniciais < TempoInicial){
 279   3            mostraInformacao();
 280   3          }
 281   2          
 282   2          opcaoB1 = 0;
 283   2        }
 284   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1059    ----
   CONSTANT SIZE    =    352    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
