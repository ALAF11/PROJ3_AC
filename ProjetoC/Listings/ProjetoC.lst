C51 COMPILER V9.60.7.0   PROJETOC                                                          05/20/2024 12:50:22 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PROJETOC
OBJECT MODULE PLACED IN .\Objects\ProjetoC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ProjetoC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -ProjetoC.lst) TABS(2) OBJECT(.\Objects\ProjetoC.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          // Tempo inicial de 5.0 segundos
   4          #define TempoInicial 50
   5          // Valor da variavel 'conta' para 1 segundo
   6          #define segundo 4000
   7          
   8          /* 
   9          O valor maximo da contagem de tempo e "FF + 1" = 256 microsegundos (Timer no modo 2 tem 8 bits)
  10          Um cilo maquina tem 6 estados e cada estado tem 2 periodos do oscilador, logo 12 periodos
  11          Periodo = 1/12*(10^6) = 1/12 microsegundos , 1 ciclo maquina = 12*Periodo = 12*(1/12) = 1 microsegundo
  12          250 microsegundos : 256-250 = 6 = 6 microsegundos (Sendo 06 -> TH0 e 06 -> TL0)
  13          */
  14          #define TempoH 0x06
  15          #define TempoL 0x06
  16          
  17          /*
  18          Da inicio a contagem decrescente para o participante responder (Caso o tempo para a contagem esteja a ser 
             -mostrado nos displays com o tempo inicial de 5.0 segundos)
  19          Repoe a visualizacao do tempo inicial de 5.0 segundos nos displays (Caso a informacao com o tempo/resposta
             - do participante esteja a ser mostrada nos displays)
  20          */
  21          sbit B1 = P3^2;
  22          
  23          /*
  24          Ao ser pressionado qualquer um dos botoes de opcao de resposta ha uma transicao logica de 1 para 0
  25          Enquanto qualquer um dos botoes de opcao de resposta continuar pressionado, e colocado o valor logico 0
  26          */
  27          sbit Pressionado = P3^3;
  28          
  29          // Opcoes de resposta
  30          sbit BA = P3^4;
  31          sbit BB = P3^5;
  32          sbit BC = P3^6;
  33          sbit BD = P3^7;
  34          
  35          // Display D1
  36          sbit D1A = P1^0;
  37          sbit D1B = P1^1;
  38          sbit D1C = P1^2;
  39          sbit D1D = P1^3;
  40          sbit D1E = P1^4;
  41          sbit D1F = P1^5;
  42          sbit D1G = P1^6;
  43          sbit D1DF = P1^7;
  44          
  45          // Display D2
  46          sbit D2A = P2^0;
  47          sbit D2B = P2^1;
  48          sbit D2C = P2^2;
  49          sbit D2D = P2^3;
  50          sbit D2E = P2^4;
  51          sbit D2F = P2^5;
  52          sbit D2G = P2^6;
C51 COMPILER V9.60.7.0   PROJETOC                                                          05/20/2024 12:50:22 PAGE 2   

  53          sbit D2DF = P2^7;
  54          
  55          //conta = 1 -> 250 microsegundos
  56          //conta = 400 -> 0.1 segundo
  57          unsigned int conta = 0;
  58          // Tempo inicial de 5.0 segundos
  59          int segundosIniciais = TempoInicial;
  60          // Resposta do participante (1->A, 2->B, 3->C ou 4->D)
  61          int resposta = 0;
  62          
  63          // Esta a '0' se esta a ser mostrado o tempo inicial nos displays (Nao foi clicado no botao B1)
  64          // Esta a '1' se informa��o com o tempo/resposta do participante esteja a ser mostrada nos displays (J
             -a foi clicado no botao B1)
  65          bit clicouB1 = 0;
  66          // Esta a '0' se o participante ainda nao respondeu (Não clicou numa das opcoes de resposta durante os 5.
             -0 segundos)
  67          // Esta a '1' se o participante ja respondeu (Clicou numa das opcoes de resposta durante os 5.0 segundos)
  68          bit respondeu = 0;
  69          
  70          // Segmentos dos displays com todos os numeros, simbolos e letras
  71          code unsigned segments[22][8] = {
  72            {1, 1, 1, 1, 1, 1, 0, 0}, // -.
  73            {0, 0, 0, 0, 0, 0, 1, 0}, // 0.
  74            {1, 0, 0, 1, 1, 1, 1, 0}, // 1.
  75            {0, 0, 1, 0, 0, 1, 0, 0}, // 2.
  76            {0, 0, 0, 0, 1, 1, 0, 0}, // 3.
  77            {1, 0, 0, 1, 1, 0, 0, 0}, // 4.
  78            {0, 1, 0, 0, 1, 0, 0, 0}, // 5.
  79            {1, 1, 1, 1, 1, 1, 0, 1}, // -
  80            {0, 0, 0, 0, 0, 0, 1, 1}, // 0
  81            {1, 0, 0, 1, 1, 1, 1, 1}, // 1
  82            {0, 0, 1, 0, 0, 1, 0, 1}, // 2
  83            {0, 0, 0, 0, 1, 1, 0, 1}, // 3
  84            {1, 0, 0, 1, 1, 0, 0, 1}, // 4
  85            {0, 1, 0, 0, 1, 0, 0, 1}, // 5
  86            {0, 1, 0, 0, 0, 0, 0, 1}, // 6
  87            {0, 0, 0, 1, 1, 1, 1, 1}, // 7
  88            {0, 0, 0, 0, 0, 0, 0, 1}, // 8
  89            {0, 0, 0, 0, 1, 0, 0, 1}, // 9
  90            {0, 0, 0, 1, 0, 0, 0, 1}, // A
  91            {1, 1, 0, 0, 0, 0, 0, 1}, // B
  92            {0, 1, 1, 0, 0, 0, 1, 1}, // C
  93            {1, 0, 0, 0, 0, 1, 0, 1}, // D
  94          };
  95          
  96          // Inicializacao do sistema
  97          void Init (void)
  98          {
  99   1        // Configuracao do registo
 100   1        EA = 1; // Ativa as interrupcoes globais
 101   1        ET0 = 1; // Ativa a interrupcao timer 0
 102   1        EX0 = 1; // Ativa a interrupcao externa 0
 103   1        EX1 = 1; // Ativa a interrupcao externa 1
 104   1        
 105   1        // Timer no modo 2, de 8 bits com auto-reload
 106   1        TMOD &= 0xF0; // Limpa os bits menos significativos
 107   1        TMOD |= 0x02; // Timer 0 no modo 2
 108   1        
 109   1        TH0 = TempoH;
 110   1        TL0 = TempoL;
 111   1        
 112   1        IT0 = 1; // Interrupcao externa 0 activa a falling edge
C51 COMPILER V9.60.7.0   PROJETOC                                                          05/20/2024 12:50:22 PAGE 3   

 113   1        IT1 = 1; // Interrupcao externa 1 activa a falling edge
 114   1        TR0 = 0; // Timer 0 nao comeca
 115   1      }
 116          
 117          // Interrupcao externa 0
 118          void External0 (void) interrupt 0 
 119          {
 120   1        // Se o botao B1 foi clicado
 121   1        if(clicouB1){
 122   2          TR0 = 0; // Timer0 para de contar o tempo
 123   2          segundosIniciais = TempoInicial;
 124   2          conta = 0;
 125   2          clicouB1 = 0;
 126   2        } 
 127   1        else {
 128   2          TR0 = 1; // Timer0 comeca a contar tempo
 129   2          clicouB1 = 1;
 130   2        }
 131   1      }
 132          
 133          // Interrupcao externa 1
 134          void External1 (void) interrupt 2
 135          {
 136   1        while(!Pressionado){
 137   2          if (segundosIniciais != TempoInicial){
 138   3            if (!BA){
 139   4              respondeu = 1;
 140   4              resposta = 1;
 141   4            } else if (!BB){
 142   4              respondeu = 1;
 143   4              resposta = 2;
 144   4            } else if (!BC){
 145   4              respondeu = 1;
 146   4              resposta = 3;
 147   4            } else if (!BD){
 148   4              respondeu = 1;
 149   4              resposta = 4;
 150   4            }
 151   3          }
 152   2        }
 153   1      }
 154          
 155          void Timer0_ISR (void) interrupt 1 
 156          {
 157   1        conta++;
 158   1      
 159   1        if (!respondeu){
 160   2          if (conta == 400){
 161   3            segundosIniciais--;
 162   3            conta=0;
 163   3          }
 164   2        }
 165   1      }
 166          
 167          void display (int num1, int num2)
 168          {
 169   1        D1A = segments[num1][0];
 170   1        D1B = segments[num1][1];
 171   1        D1C = segments[num1][2];
 172   1        D1D = segments[num1][3];
 173   1        D1E = segments[num1][4];
 174   1        D1F = segments[num1][5];
C51 COMPILER V9.60.7.0   PROJETOC                                                          05/20/2024 12:50:22 PAGE 4   

 175   1        D1G = segments[num1][6];
 176   1        D1DF = segments[num1][7];
 177   1      
 178   1        D2A = segments[num2][0];
 179   1        D2B = segments[num2][1];
 180   1        D2C = segments[num2][2];
 181   1        D2D = segments[num2][3];
 182   1        D2E = segments[num2][4];
 183   1        D2F = segments[num2][5];
 184   1        D2G = segments[num2][6];
 185   1        D2DF = segments[num2][7];
 186   1      }
 187          
 188          void displaySegundos (int num)
 189          {
 190   1          int dezenas = num / 10;
 191   1          int unidades = num % 10;
 192   1      
 193   1          display(dezenas+1, unidades+8);
 194   1      }
 195          
 196          void semResposta (void)
 197          {
 198   1        conta = 0;
 199   1        respondeu = 1;
 200   1        display(1, 8);
 201   1        TR0 = 1;
 202   1        
 203   1        do {
 204   2      
 205   2          // Verifica se o tempo excedeu o limite
 206   2          if (conta == segundo) {
 207   3              display(0, 7); // Exibir algo indicando que o tempo acabou (ou sem resposta)
 208   3              TR0 = 0; // Parar o timer
 209   3          }
 210   2        } while (B1); // Continua no loop enquanto B1 est� em n�vel alto (n�o pressionado)
 211   1        
 212   1        conta = 0;
 213   1        respondeu = 0;
 214   1      }
 215          
 216          void mostraInformacao(void)
 217          {
 218   1        bit opcao = 0;
 219   1        conta = 0;
 220   1        TR0 = 1;
 221   1        
 222   1        while (B1){
 223   2          if (conta == segundo){
 224   3            if (opcao == 0){
 225   4              displaySegundos(segundosIniciais);
 226   4              opcao = 1;
 227   4            } else {
 228   4              display(0, resposta+17);
 229   4              opcao = 0;
 230   4            }
 231   3            conta = 0;
 232   3          }
 233   2        }
 234   1        
 235   1        TR0 = 0;
 236   1        conta = 0;
C51 COMPILER V9.60.7.0   PROJETOC                                                          05/20/2024 12:50:22 PAGE 5   

 237   1        respondeu = 0;
 238   1      }
 239          
 240          void main (void)
 241          {
 242   1        Init();
 243   1        
 244   1        while(1){
 245   2          
 246   2          displaySegundos(segundosIniciais);
 247   2          
 248   2          if (segundosIniciais <= 0){
 249   3            semResposta();
 250   3          }
 251   2      
 252   2          if (respondeu && segundosIniciais < TempoInicial){
 253   3            mostraInformacao();
 254   3          }
 255   2        }
 256   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    992    ----
   CONSTANT SIZE    =    352    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
